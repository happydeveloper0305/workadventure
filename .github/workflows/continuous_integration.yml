# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Continuous Integration"

on:
  push:
    branches:
      - master
      - develop
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  continuous-integration-play:
    name: "Continuous Integration Play"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: "Install libs/tailwind dependencies"
        run: yarn install
        working-directory: "libs/tailwind"

      - name: "Install libs/map-editor dependencies"
        run: yarn install
        working-directory: "libs/map-editor"

      - name: "Install dependencies"
        run: yarn install
        working-directory: "play"

      - name: "Install messages dependencies"
        run: yarn install
        working-directory: "messages"

      - name: "Install libs dependencies"
        run: yarn install
        working-directory: "libs/messages"

      - name: "Build proto messages"
        run: yarn run ts-proto && yarn run proto && yarn run copy-to-play
        working-directory: "messages"

      - name: "Generate i18n files"
        run: yarn run typesafe-i18n
        working-directory: "play"

      - name: "Build"
        run: yarn run build
        env:
          PUSHER_URL: "//localhost:3000"
          ADMIN_URL: "//localhost:80"
          # upgrade RAM available to 6GB
          NODE_OPTIONS: --max-old-space-size=6144
        working-directory: "play"

      - name: "Build iframe-api"
        run: yarn run build-iframe-api
        working-directory: "play"

      - name: "Typecheck"
        run: yarn run typecheck
        working-directory: "play"

      - name: "Svelte check"
        run: yarn run svelte-check
        working-directory: "play"

      - name: "Lint"
        run: yarn run lint
        working-directory: "play"

      - name: "Pretty"
        run: yarn run pretty-check
        working-directory: "play"

      - name: "Unit tests"
        run: yarn test
        working-directory: "play"

  continuous-integration-chat:
    name: "Continuous Integration Chat"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      # - name: "Copy libs dependencies"
      #   run: mkdir -p ./../front/libs/tailwind && cp -R ./* ./../front/libs
      #   working-directory: "libs"

      - name: "Install libs/tailwind dependencies"
        run: yarn install
        working-directory: "libs/tailwind"

      - name: "Install libs/messages dependencies"
        run: yarn install
        working-directory: "libs/messages"

      - name: "Install dependencies"
        run: yarn install
        working-directory: "chat"

      - name: "Install messages dependencies"
        run: yarn install
        working-directory: "messages"

      - name: "Build proto messages"
        run: yarn run ts-proto
        working-directory: "messages"

      - name: "Pretty"
        run: yarn run pretty-check
        working-directory: "chat"

      - name: "Generate i18n files"
        run: yarn run typesafe-i18n
        working-directory: "chat"

      - name: "Build"
        run: yarn run build
        env:
          PUSHER_URL: "//localhost:8080"
          ADMIN_URL: "//localhost:80"
          # upgrade RAM available to 6GB
          NODE_OPTIONS: --max-old-space-size=6144
        working-directory: "chat"

      - name: "Svelte check"
        run: yarn run svelte-check
        working-directory: "chat"

      - name: "Lint"
        run: yarn run lint
        working-directory: "chat"

      # TODO active
      #- name: "Typecheck"
      #  run: yarn run typecheck
      #  working-directory: "chat"

      # TODO active
      #- name: "Jasmine"
      #  run: yarn test
      #  working-directory: "chat"

  continuous-integration-back:
    name: "Continuous Integration Back"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: "Install dependencies"
        run: yarn install
        working-directory: "back"

      - name: "Install messages dependencies"
        run: yarn install
        working-directory: "messages"

      - name: "Install libs dependencies"
        run: yarn install
        working-directory: "libs/messages"

      - name: "Build proto messages"
        run: yarn run proto && yarn run ts-proto && yarn run copy-to-back
        working-directory: "messages"

      - name: "Build"
        run: yarn run tsc
        working-directory: "back"

      - name: "Lint"
        run: yarn run lint
        working-directory: "back"

      - name: "Jasmine"
        run: yarn test
        working-directory: "back"

      - name: "Prettier"
        run: yarn run pretty-check
        working-directory: "back"

  continuous-integration-uploader:
    name: "Continuous Integration Uploader"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: "Install dependencies"
        run: yarn install
        working-directory: "uploader"

      - name: "Lint"
        run: yarn run lint
        working-directory: "uploader"

      - name: "jest"
        run: yarn test
        working-directory: "uploader"


  continuous-integration-map-storage:
    name: "Continuous Integration Map Storage"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: "Install dependencies"
        run: yarn install
        working-directory: "map-storage"

      - name: "Install messages dependencies"
        run: yarn install
        working-directory: "messages"

      - name: "Build proto messages"
        run: yarn run ts-proto
        working-directory: "messages"

      - name: "Install libs/map-editor dependencies"
        run: yarn install
        working-directory: "libs/map-editor"

      - name: "Install libs/messages dependencies"
        run: yarn install
        working-directory: "libs/messages"

      - name: "Build"
        run: yarn run build
        working-directory: "map-storage"

      - name: "Lint"
        run: yarn run lint
        working-directory: "map-storage"

      - name: "Jasmine"
        run: yarn test
        working-directory: "map-storage"

      - name: "Prettier"
        run: yarn run format
        working-directory: "map-storage"

  continuous-integration-desktop:
    name: "Continuous Integration Desktop"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: "Install dependencies"
        run: yarn install --froze-lockfile
        working-directory: "desktop/electron"

      - name: "Build"
        run: yarn build
        working-directory: "desktop/electron"

      - name: "Typecheck"
        run: yarn typecheck
        working-directory: "desktop/electron"

      - name: "Lint"
        run: yarn lint
        working-directory: "desktop/electron"

      - name: "Jasmine"
        run: yarn test
        working-directory: "desktop/electron"

      - name: "Prettier"
        run: yarn pretty-check
        working-directory: "desktop/electron"

  continuous-integration-desktop-local-app:
    name: "Continuous Integration Desktop Local App"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: "Install dependencies"
        run: yarn install --froze-lockfile
        working-directory: "desktop/local-app"

      - name: "Build"
        run: yarn build
        working-directory: "desktop/local-app"

      - name: "Typecheck"
        run: yarn check
        working-directory: "desktop/local-app"

      - name: "Lint"
        run: yarn lint
        working-directory: "desktop/local-app"

      - name: "Jasmine"
        run: yarn test
        working-directory: "desktop/local-app"

      - name: "Prettier"
        run: yarn pretty-check
        working-directory: "desktop/local-app"

  continuous-integration-end-to-end-tests:
    name: "Continuous Integration checking End To End tests"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.0.0"

      - name: "Setup NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: 16


      - name: "Install dependencies"
        run: npm ci
        working-directory: "tests"

      - name: "Install libs/map-editor dependencies"
        run: yarn install
        working-directory: "libs/map-editor"

      - name: "Install libs/messages dependencies"
        run: yarn install
        working-directory: "libs/messages"

      - name: "Install play dependencies"
        run: yarn install --froze-lockfile
        working-directory: "play"

      - name: "Install messages dependencies"
        run: yarn install
        working-directory: "messages"

      - name: "Build proto messages"
        run: yarn run ts-proto
        working-directory: "messages"

      - name: "Build API typings"
        run: yarn run build-typings
        working-directory: "play"

      - name: "Lint"
        run: yarn lint
        working-directory: "tests"
